complete -c nc.openbsd -s 4 -d "Forces nc to use IPv4 addresses only"
complete -c nc.openbsd -s 6 -d "Forces nc to use IPv6 addresses only"
complete -c nc.openbsd -s b -d "Allow broadcast"
complete -c nc.openbsd -s C -d "Send CRLF as line-ending"
complete -c nc.openbsd -s D -d "Enable debugging on the socket"
complete -c nc.openbsd -s d -d "Do not attempt to read from stdin"
complete -c nc.openbsd -s F -d "Pass the first connected socket using sendmsg(2) to stdout and exit"
complete -c nc.openbsd -s h -d "Prints out nc help"
complete -c nc.openbsd -s I -x -d "Specifies the size of the TCP receive buffer"
complete -c nc.openbsd -s i -x -d "Specifies a delay time interval between lines of text sent and received"
complete -c nc.openbsd -s k -d "Forces nc to stay listening for another connection after its current connection is completed"
complete -c nc.openbsd -s l -d "Used to specify that nc should listen for an incoming connection rather than initiate a connection to a remote host"
complete -c nc.openbsd -s M -x -d "Set the TTL / hop limit of outgoing packets"
complete -c nc.openbsd -s m -x -d "Ask the kernel to drop incoming packets whose TTL / hop limit is under minttl"
complete -c nc.openbsd -s N -d "shutdown(2) the network socket after EOF on the input"
complete -c nc.openbsd -s n -d "Do not do any DNS or service lookups on any specified addresses, hostnames or ports"
complete -c nc.openbsd -s O -x -d "Specifies the size of the TCP send buffer"
complete -c nc.openbsd -s P -x -d "Specifies a username to present to a proxy server that requires authentication"
complete -c nc.openbsd -s p -x -d "Specifies the source port nc should use, subject to privilege restrictions and availability"
complete -c nc.openbsd -s q -x -d "after EOF on stdin, wait the specified number of seconds and then quit"
complete -c nc.openbsd -s r -d "Specifies that source and/or destination ports should be chosen randomly instead of sequentially within a range or in the order that the system assigns them"
complete -c nc.openbsd -s S -d "Enables the RFC 2385 TCP MD5 signature option"
complete -c nc.openbsd -s s -x -d "Specifies the IP of the interface which is used to send the packets"
complete -c nc.openbsd -s T -x -a "critical inetcontrol lowcost lowdelay netcontrol throughput reliability ef af cs0 cs1 cs2 cs3 cs4 cs5 cs6 cs7" -d "Change IPv4 TOS value"
complete -c nc.openbsd -s t -d "Causes nc to send RFC 854 DON'T and WON'T responses to RFC 854 DO and WILL requests"
complete -c nc.openbsd -s U -d "Specifies to use UNIX-domain sockets"
complete -c nc.openbsd -s u -d "Use UDP instead of the default option of TCP"
complete -c nc.openbsd -s V -x -d "Set the routing table to be used"
complete -c nc.openbsd -s v -d "Have nc give more verbose output"
complete -c nc.openbsd -s W -x -d "Terminate after receiving recvlimit packets from the network"
complete -c nc.openbsd -s w -x -d "Connections which cannot be established or are idle timeout after timeout seconds"
function __fish_complete_nc-connect-openbsd
    printf "connect\tHTTPS proxy\n"
    printf "4\tSOCKS v.4\n"
    printf "5\tSOCKS v.5\n"
end
complete -c nc.openbsd -s X -x -a "(__fish_complete_nc-connect-openbsd)" -d "Requests that nc should use the specified protocol when talking to the proxy server"
complete -c nc.openbsd -s x -x -a "(__fish_print_hostnames)" -d "Requests that nc should connect to destination using a proxy at proxy_address and port"
complete -c nc.openbsd -s Z -d "DCCP mode"
complete -c nc.openbsd -s z -d "Specifies that nc should just scan for listening daemons, without sending any data to them"


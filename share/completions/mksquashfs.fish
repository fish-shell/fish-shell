complete -c mksquashfs -o b -d 'Data block size'
complete -c mksquashfs -o comp -d 'Select a compression scheme' -xa 'gzip lzo lz4 xz zstd lzma'
complete -c mksquashfs -o noI -o noInodeCompression -d 'do not compress inode table'
complete -c mksquashfs -o noId -o noIdTableCompression -d 'do not compress the uid/gid table'
complete -c mksquashfs -o noD -o noDataCompression -d 'do not compress data blocks'
complete -c mksquashfs -o noF -o noFragmentCompression -d 'do not compress fragment blocks'
complete -c mksquashfs -o noX -o noXattrCompression -d 'do not compress extended attributes'
complete -c mksquashfs -o no-compression -d 'do not compress any of the data or metadata'
complete -c mksquashfs -o tar -d 'read uncompressed tar file from standard in (stdin)'
complete -c mksquashfs -o no-strip -o tarstyle -d 'act like tar, and do not strip leading directories from source files'
complete -c mksquashfs -o cpiostyle -d 'act like cpio, and read file pathnames from standard in (stdin)'
complete -c mksquashfs -o cpiostyle0 -d 'like -cpiostyle, but filenames are null terminated'
complete -c mksquashfs -o reproducible -d 'build filesystems that are reproducible'
complete -c mksquashfs -o not-reproducible -d 'build filesystems that are not reproducible'
complete -c mksquashfs -o mkfs-time -o fstime -xd 'set filesystem creation timestamp'
complete -c mksquashfs -o all-time -xd 'set all file timestamps'
complete -c mksquashfs -o root-time -xd 'set root directory time'
complete -c mksquashfs -o root-mode -xd 'set root directory permissions to octal <mode>'
complete -c mksquashfs -o root-uid -xa '(__fish_complete_user_ids)' -d 'set root directory owner'
complete -c mksquashfs -o root-gid -xa '(__fish_complete_group_ids)' -d 'set root directory group'
complete -c mksquashfs -o all-root -o root-owned -d 'make all files owned by root'
complete -c mksquashfs -o force-uid -xa '(__fish_complete_user_ids)' -d 'set all file uids'
complete -c mksquashfs -o force-gid -xa '(__fish_complete_group_ids)' -d 'set all file gids'
complete -c mksquashfs -o pseudo-override -d 'make pseudo file uids and gids override -all-root, -force-uid and -force-gid options'
complete -c mksquashfs -o no-exports -d 'do not make filesystem exportable via NFS'
complete -c mksquashfs -o exports -d 'make filesystem exportable via NFS'
complete -c mksquashfs -o no-sparse -d 'do not detect sparse files'
complete -c mksquashfs -o no-tailends -d 'do not pack tail ends into fragments'
complete -c mksquashfs -o tailends -o always-use-fragments -d 'pack tail ends into fragments'
complete -c mksquashfs -o no-fragments -d 'do not use fragments'
complete -c mksquashfs -o no-duplicates -d 'do not perform duplicate checking'
complete -c mksquashfs -o no-hardlinks -d 'do not hardlink files, instead store duplicates'
complete -c mksquashfs -o keep-as-directory -d 'if one source directory is specified, create a root directory containing that directory, rather than the contents of the directory'
complete -c mksquashfs -o p -xd 'add pseudo file definition'
complete -c mksquashfs -o pf -rd 'add list of pseudo file definitions from <pseudo-file>'
complete -c mksquashfs -o sort -rd 'sort files according to priorities in <sort_file>'
complete -c mksquashfs -o ef -rd 'list of exclude dirs/files'
complete -c mksquashfs -o wildcards -d 'allow extended shell wildcards (globbing) to be used in exclude dirs/files'
complete -c mksquashfs -o regex -d 'allow POSIX regular expressions to be used in exclude dirs/files'
complete -c mksquashfs -o max-depth -xd 'descend at most <levels> of directories when scanning filesystem'
complete -c mksquashfs -o one-file-system -d 'do not cross filesystem boundaries'
complete -c mksquashfs -o one-file-system-x -d 'do not cross filesystem boundaries'
complete -c mksquashfs -o no-xattrs -d 'do not store extended attributes'
complete -c mksquashfs -o xattrs -d 'store extended attributes'
complete -c mksquashfs -o xattrs-exclude -xd 'exclude any xattr names matching <regex>'
complete -c mksquashfs -o xattrs-include -xd 'include any xattr names matching <regex>'
complete -c mksquashfs -o xattrs-add -xd 'add the xattr <name> with <val> to files'
complete -c mksquashfs -o version -d 'print version, licence and copyright message'
complete -c mksquashfs -o exit-on-error -d 'treat normally ignored errors as fatal'
complete -c mksquashfs -o quiet -d 'no verbose output'
complete -c mksquashfs -o info -d 'print files written to filesystem'
complete -c mksquashfs -o no-progress -d 'do not display the progress bar'
complete -c mksquashfs -o progress -d 'display progress bar when using the -info option'
complete -c mksquashfs -o percentage -d 'display a percentage rather than the full progress bar'
complete -c mksquashfs -o throttle -xd 'throttle the I/O input rate by the given percentage'
complete -c mksquashfs -o limit -xd 'limit the I/O input rate to the given percentage'
complete -c mksquashfs -o processors -xd 'use <number> processors'
complete -c mksquashfs -o mem -xd 'use <size> physical memory for caches'
complete -c mksquashfs -o mem-percent -xd 'use <percent> physical memory for caches'
complete -c mksquashfs -o mem-default -d 'print default memory usage in Mbytes'
complete -c mksquashfs -o noappend -d 'do not append to existing filesystem'
complete -c mksquashfs -o root-becomes -xd 'when appending source files/directories, make the original root become a subdirectory in the new root called <name>, rather than adding the new source items to the original root'
complete -c mksquashfs -o no-recovery -d 'do not generate a recovery file'
complete -c mksquashfs -o recovery-path -rd 'use <name> as the directory to store the recovery file'
complete -c mksquashfs -o recover -rd 'recover filesystem data using recovery file'
complete -c mksquashfs -o action -xd 'evaluate <expr> on every file, and execute <action> if it returns TRUE'
complete -c mksquashfs -o log-action -xd 'as -action, but log expression evaluation results and actions performed'
complete -c mksquashfs -o true-action -xd 'as -action, but only log expressions which return TRUE'
complete -c mksquashfs -o false-action -xd 'as -action, but only log expressions which return FALSE'
complete -c mksquashfs -o action-file -rd 'as -action, but read actions from <file>'
complete -c mksquashfs -o log-action-file -rd 'as -log-action, but read actions from <file>'
complete -c mksquashfs -o true-action-file -rd 'as -true-action, but read actions from <f>'
complete -c mksquashfs -o false-action-file -rd 'as -false-action, but read actions from <f>'
complete -c mksquashfs -o default-mode -xd 'sets the default directory permissions to octal <mode>'
complete -c mksquashfs -o default-uid -xa '(__fish_complete_user_ids)' -d 'sets the default directory user'
complete -c mksquashfs -o default-gid -xa '(__fish_complete_group_ids)' -d 'sets the default directory group'
complete -c mksquashfs -o ignore-zeros -d 'allow tar files to be concatenated together and fed to Mksquashfs'
complete -c mksquashfs -o nopad -d 'do not pad filesystem to a multiple of 4K'
complete -c mksquashfs -o o -o offset -xd 'skip <offset> bytes at the beginning of FILESYSTEM'
complete -c mksquashfs -o h -o help -d 'Print help and exit'
complete -c mksquashfs -o Xhelp -d 'print compressor options for selected compressor'

# FIXME: __fish_seen_argument cant match against value for options so we search for occurence of the compressor anywhere. this leads to false positives sometimes.
complete -c mksquashfs -n '__fish_seen_argument gzip' -o Xcompression-level -xd 'set gzip compression level, 1 .. 9'
complete -c mksquashfs -n '__fish_seen_argument gzip' -o Xwindow-size -xd 'set gzip window size in range 8 .. 15'
complete -c mksquashfs -n '__fish_seen_argument gzip' -o Xstrategy -xa 'default filtered huffman_only run_length_encoded fixed' -d 'gzip strategy to use'
complete -c mksquashfs -n '__fish_seen_argument lzo' -o Xalgorithm -xa 'lzo1x_1 lzo1x_1_11 lzo1x_1_12 lzo1x_1_15 lzo1x_999' -d 'lzo algorithm to use'
complete -c mksquashfs -n '__fish_seen_argument lzo' -o Xcompression-level -xd 'zstd compression level for lzo1x_999 algorithm in range 1 .. 9'
complete -c mksquashfs -n '__fish_seen_argument lz4' -o Xhc -d 'Compress using LZ4 High Compression'
complete -c mksquashfs -n '__fish_seen_argument xz' -o Xbcj -xa 'x86 arm armthumb powerpc sparc ia64' -d 'Compress using filters in turn and choose the best compression'
complete -c mksquashfs -n '__fish_seen_argument xz' -o Xdict-size -xd 'set xz dictionary size'
complete -c mksquashfs -n '__fish_seen_argument zstd' -o Xcompression-level -xd 'set zstd compression level in range 1 .. 22'

name: Lint

on: [push, pull_request]

permissions:
  contents: read

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/rust-toolchain@stable
      with:
        components: rustfmt
    - name: install dependencies
      run: pip install ruff
    - name: build fish
      run: cargo build
    - name: check format
      run: PATH="target/debug:$PATH" build_tools/style.fish --all --check
    - name: check rustfmt
      run: find build.rs crates src -type f -name '*.rs' | xargs rustfmt --check


  clippy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rust_version: "stable"
            features: ""
          - rust_version: "stable"
            features: "--no-default-features"
          - rust_version: "msrv"
            features: ""
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/rust-toolchain
      with:
        toolchain_channel: ${{ matrix.rust_version }}
        components: clippy
    - name: Install deps
      run: |
        sudo apt install gettext
    - name: cargo clippy
      run: cargo clippy --workspace --all-targets ${{ matrix.features }} -- --deny=warnings

  rustdoc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/rust-toolchain@stable
    - name: Install deps
      run: |
        sudo apt install gettext
    - name: cargo doc
      run: |
        RUSTDOCFLAGS='-D warnings' cargo doc --workspace
    - name: cargo doctest
      run: |
        cargo test --doc --workspace

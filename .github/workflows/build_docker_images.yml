name: Build Docker test images

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: docker-builds

env:
  REGISTRY: ghcr.io
  NAMESPACE: fish-ci
  ONLY_FOR_REPO_OWNER: fish-shell

jobs:
  check-docker-changes:
    if: github.repository_owner == env.ONLY_FOR_REPO_OWNER
    runs-on: ubuntu-latest
    outputs:
      docker-changed: ${{ steps.changes.outputs.docker }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            docker:
              - 'docker/**'

  docker-build:
    needs: check-docker-changes
    if: github.repository_owner == env.ONLY_FOR_REPO_OWNER && needs.check-docker-changes.outputs.docker-changed == 'true'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: alpine
          - os: ubuntu-latest
            target: centos9
          - os: ubuntu-latest
            target: fedora
          - os: ubuntu-latest
            target: focal-32bit
          - os: ubuntu-24.04-arm
            target: focal-arm64
          - os: ubuntu-latest
            target: focal
          - os: ubuntu-24.04-arm
            target: jammy-armv7-32bit
          - os: ubuntu-latest
            target: jammy-asan
          - os: ubuntu-latest
            target: jammy-tsan
          - os: ubuntu-latest
            target: jammy
          - os: ubuntu-latest
            target: noble
          - os: ubuntu-latest
            target: opensuse-tumbleweed
    runs-on: ${{ matrix.os }}

    steps:
      -
        name: Checkout
        uses: actions/checkout@v5
      -
        name: Login to Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.NAMESPACE }}/${{ matrix.target }}
          flavor: |
            latest=true
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: docker/context
          push: true
          file: docker/${{ matrix.target }}.Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trigger-cirrus:
    needs: [check-docker-changes, docker-build]
    if: always() && github.repository_owner == env.ONLY_FOR_REPO_OWNER
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Cirrus CI
        env:
          CIRRUS_TOKEN: ${{ secrets.CIRRUS_TOKEN }}
        run: |
          set -x
          # N.B. push-triggered workflows are usually from master.
          branch=${{ github.ref_name }}
          repository_id=${{ github.repository_id }}
          curl -X POST \
            -H "Authorization: Bearer $CIRRUS_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "query": "mutation {
                createBuild(input: {
                  repositoryId: \"$repository_id\",
                  branch: \"$branch\"
                })
                { build { id } }
              }"
            }' \
            https://api.cirrus-ci.com/graphql


\section trap trap - perform an action when the shell receives a signal

\subsection trap-synopsis Synopsis
\fish{synopsis}
trap [OPTIONS] [[ARG] SIGSPEC ... ]
\endfish

\subsection trap-description Description

`trap` is a wrapper around the fish event delivery framework. It exists for backwards compatibility with POSIX shells. For other uses, it is recommended to define an <a href='index.html#event'>event handler</a>.

The following parameters are available:

- `ARG` is the command to be executed on signal delivery.

- `SIGSPEC` is the name of the signal to trap.

- `-l` or `--list-signals` prints a list of signal names.

- `-p` or `--print` prints all defined signal handlers.

If `ARG` and `SIGSPEC` are both specified, `ARG` is the command to be executed when the signal specified by `SIGSPEC` is delivered.

If `ARG` is absent (and there is a single SIGSPEC) or -, each specified signal is reset to its original disposition (the value it had upon entrance to the shell).  If `ARG` is the null string the signal specified by each `SIGSPEC` is ignored by the shell and by the commands it invokes.

If `ARG` is not present and `-p` has been supplied, then the trap commands associated with each `SIGSPEC` are displayed. If no arguments are supplied or if only `-p` is given, `trap` prints the list of commands associated with each signal.

Signal names are case insensitive and the `SIG` prefix is optional.

The return status is 1 if any `SIGSPEC` is invalid; otherwise trap returns 0.

\subsection trap-example Example

\fish
trap "status --print-stack-trace" SIGUSR1
# Prints a stack trace each time the SIGUSR1 signal is sent to the shell.
\endfish